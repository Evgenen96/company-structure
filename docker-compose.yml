version: '3'
services:

  postgres:
    image: postgres:12.4-alpine
    container_name: postgres-004
    ports:
      - '5432:5432'
    network_mode: bridge
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'cofeok'
      POSTGRES_DB: 'company_structure'

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '5433:80'
    network_mode: bridge
    external_links:
      - postgres-004:postgres
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@example.com'
      PGADMIN_DEFAULT_PASSWORD: 'admin'
  

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    ports:
      - "9092:9092"
      - "2181:2181"
    restart: unless-stopped
  
  kafdrop:
    image: obsidiandynamics/kafdrop:3.23.0
    container_name: kafdrop
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.9.3
    command: filebeat -e -strict.perms=false
    volumes:
      - /var/run/docker.sock:/host_docker/docker.sock
      - /var/lib/docker:/host_docker/var/lib/docker
      - ./department-microservice/logs:/usr/share/filebeat/logs/department
      - ./employee-microservice/logs:/usr/share/filebeat/logs/employee
      - ./configs/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    networks:
      - elk
    links:
      - logstash:logstash
    depends_on:
      - logstash

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    restart: unless-stopped
    hostname: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    container_name: elasticsearch


  kibana:
    image: kibana:7.9.3
    restart: unless-stopped
    hostname: kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
    container_name: kibana
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:7.9.3
    restart: unless-stopped
    hostname: logstash
    volumes:
      - ./configs/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"
    links:
      - elasticsearch:elasticsearch
    container_name: logstash
    networks:
      - elk
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411

  prom:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

networks:
  elk:
    driver: bridge